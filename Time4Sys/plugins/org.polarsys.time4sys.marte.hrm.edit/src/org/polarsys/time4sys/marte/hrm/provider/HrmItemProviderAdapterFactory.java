/*******************************************************************************
 * Copyright (c) 2017 RealTime-at-Work and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     Lo√Øc Fejoz - initial API and implementation
 *******************************************************************************/
/**
 */
package org.polarsys.time4sys.marte.hrm.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.polarsys.time4sys.marte.grm.GrmPackage;
import org.polarsys.time4sys.marte.grm.Resource;
import org.polarsys.time4sys.marte.grm.ResourceInterface;
import org.polarsys.time4sys.marte.grm.util.GrmSwitch;
import org.polarsys.time4sys.marte.hrm.HrmFactory;
import org.polarsys.time4sys.marte.hrm.HrmPackage;
import org.polarsys.time4sys.marte.hrm.util.HrmAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class HrmItemProviderAdapterFactory extends HrmAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(HrmEditPlugin.INSTANCE, HrmPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public HrmItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareResourcePackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareResourcePackageItemProvider hardwareResourcePackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareResourcePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareResourcePackageAdapter() {
		if (hardwareResourcePackageItemProvider == null) {
			hardwareResourcePackageItemProvider = new HardwareResourcePackageItemProvider(this);
		}

		return hardwareResourcePackageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwarePort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwarePortItemProvider hardwarePortItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwarePort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwarePortAdapter() {
		if (hardwarePortItemProvider == null) {
			hardwarePortItemProvider = new HardwarePortItemProvider(this);
		}

		return hardwarePortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareConnector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareConnectorItemProvider hardwareConnectorItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareConnector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareConnectorAdapter() {
		if (hardwareConnectorItemProvider == null) {
			hardwareConnectorItemProvider = new HardwareConnectorItemProvider(this);
		}

		return hardwareConnectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareServiceItemProvider hardwareServiceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareServiceAdapter() {
		if (hardwareServiceItemProvider == null) {
			hardwareServiceItemProvider = new HardwareServiceItemProvider(this);
		}

		return hardwareServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareComputingResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareComputingResourceItemProvider hardwareComputingResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareComputingResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareComputingResourceAdapter() {
		if (hardwareComputingResourceItemProvider == null) {
			hardwareComputingResourceItemProvider = new HardwareComputingResourceItemProvider(this);
		}

		return hardwareComputingResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareProcessor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareProcessorItemProvider hardwareProcessorItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareProcessor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareProcessorAdapter() {
		if (hardwareProcessorItemProvider == null) {
			hardwareProcessorItemProvider = new HardwareProcessorItemProvider(this);
		}

		return hardwareProcessorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareAsic} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareAsicItemProvider hardwareAsicItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareAsic}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareAsicAdapter() {
		if (hardwareAsicItemProvider == null) {
			hardwareAsicItemProvider = new HardwareAsicItemProvider(this);
		}

		return hardwareAsicItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwarePld} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwarePldItemProvider hardwarePldItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwarePld}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwarePldAdapter() {
		if (hardwarePldItemProvider == null) {
			hardwarePldItemProvider = new HardwarePldItemProvider(this);
		}

		return hardwarePldItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareBranchPredictor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareBranchPredictorItemProvider hardwareBranchPredictorItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareBranchPredictor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareBranchPredictorAdapter() {
		if (hardwareBranchPredictorItemProvider == null) {
			hardwareBranchPredictorItemProvider = new HardwareBranchPredictorItemProvider(this);
		}

		return hardwareBranchPredictorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareIsa} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareIsaItemProvider hardwareIsaItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareIsa}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareIsaAdapter() {
		if (hardwareIsaItemProvider == null) {
			hardwareIsaItemProvider = new HardwareIsaItemProvider(this);
		}

		return hardwareIsaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareMemory} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareMemoryItemProvider hardwareMemoryItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareMemory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareMemoryAdapter() {
		if (hardwareMemoryItemProvider == null) {
			hardwareMemoryItemProvider = new HardwareMemoryItemProvider(this);
		}

		return hardwareMemoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareCache} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareCacheItemProvider hardwareCacheItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareCache}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareCacheAdapter() {
		if (hardwareCacheItemProvider == null) {
			hardwareCacheItemProvider = new HardwareCacheItemProvider(this);
		}

		return hardwareCacheItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareRam} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareRamItemProvider hardwareRamItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareRam}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareRamAdapter() {
		if (hardwareRamItemProvider == null) {
			hardwareRamItemProvider = new HardwareRamItemProvider(this);
		}

		return hardwareRamItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareRom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareRomItemProvider hardwareRomItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareRom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareRomAdapter() {
		if (hardwareRomItemProvider == null) {
			hardwareRomItemProvider = new HardwareRomItemProvider(this);
		}

		return hardwareRomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareDrive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareDriveItemProvider hardwareDriveItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareDrive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareDriveAdapter() {
		if (hardwareDriveItemProvider == null) {
			hardwareDriveItemProvider = new HardwareDriveItemProvider(this);
		}

		return hardwareDriveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareStorageManager} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareStorageManagerItemProvider hardwareStorageManagerItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareStorageManager}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareStorageManagerAdapter() {
		if (hardwareStorageManagerItemProvider == null) {
			hardwareStorageManagerItemProvider = new HardwareStorageManagerItemProvider(this);
		}

		return hardwareStorageManagerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareDma} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareDmaItemProvider hardwareDmaItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareDma}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareDmaAdapter() {
		if (hardwareDmaItemProvider == null) {
			hardwareDmaItemProvider = new HardwareDmaItemProvider(this);
		}

		return hardwareDmaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareMmu} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareMmuItemProvider hardwareMmuItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareMmu}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareMmuAdapter() {
		if (hardwareMmuItemProvider == null) {
			hardwareMmuItemProvider = new HardwareMmuItemProvider(this);
		}

		return hardwareMmuItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareArbiter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareArbiterItemProvider hardwareArbiterItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareArbiter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareArbiterAdapter() {
		if (hardwareArbiterItemProvider == null) {
			hardwareArbiterItemProvider = new HardwareArbiterItemProvider(this);
		}

		return hardwareArbiterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareCommunicationResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareCommunicationResourceItemProvider hardwareCommunicationResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareCommunicationResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareCommunicationResourceAdapter() {
		if (hardwareCommunicationResourceItemProvider == null) {
			hardwareCommunicationResourceItemProvider = new HardwareCommunicationResourceItemProvider(this);
		}

		return hardwareCommunicationResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareMedia} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareMediaItemProvider hardwareMediaItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareMedia}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareMediaAdapter() {
		if (hardwareMediaItemProvider == null) {
			hardwareMediaItemProvider = new HardwareMediaItemProvider(this);
		}

		return hardwareMediaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareBus} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareBusItemProvider hardwareBusItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareBus}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareBusAdapter() {
		if (hardwareBusItemProvider == null) {
			hardwareBusItemProvider = new HardwareBusItemProvider(this);
		}

		return hardwareBusItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareBridge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareBridgeItemProvider hardwareBridgeItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareBridge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareBridgeAdapter() {
		if (hardwareBridgeItemProvider == null) {
			hardwareBridgeItemProvider = new HardwareBridgeItemProvider(this);
		}

		return hardwareBridgeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareTimingResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareTimingResourceItemProvider hardwareTimingResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareTimingResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareTimingResourceAdapter() {
		if (hardwareTimingResourceItemProvider == null) {
			hardwareTimingResourceItemProvider = new HardwareTimingResourceItemProvider(this);
		}

		return hardwareTimingResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareClock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareClockItemProvider hardwareClockItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareClock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareClockAdapter() {
		if (hardwareClockItemProvider == null) {
			hardwareClockItemProvider = new HardwareClockItemProvider(this);
		}

		return hardwareClockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareTimer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareTimerItemProvider hardwareTimerItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareTimer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareTimerAdapter() {
		if (hardwareTimerItemProvider == null) {
			hardwareTimerItemProvider = new HardwareTimerItemProvider(this);
		}

		return hardwareTimerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareWatchdog} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareWatchdogItemProvider hardwareWatchdogItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareWatchdog}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareWatchdogAdapter() {
		if (hardwareWatchdogItemProvider == null) {
			hardwareWatchdogItemProvider = new HardwareWatchdogItemProvider(this);
		}

		return hardwareWatchdogItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareDevice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareDeviceItemProvider hardwareDeviceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareDevice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareDeviceAdapter() {
		if (hardwareDeviceItemProvider == null) {
			hardwareDeviceItemProvider = new HardwareDeviceItemProvider(this);
		}

		return hardwareDeviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareIo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareIoItemProvider hardwareIoItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareIo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareIoAdapter() {
		if (hardwareIoItemProvider == null) {
			hardwareIoItemProvider = new HardwareIoItemProvider(this);
		}

		return hardwareIoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareSupport} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareSupportItemProvider hardwareSupportItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareSupport}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareSupportAdapter() {
		if (hardwareSupportItemProvider == null) {
			hardwareSupportItemProvider = new HardwareSupportItemProvider(this);
		}

		return hardwareSupportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareActuator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareActuatorItemProvider hardwareActuatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareActuator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareActuatorAdapter() {
		if (hardwareActuatorItemProvider == null) {
			hardwareActuatorItemProvider = new HardwareActuatorItemProvider(this);
		}

		return hardwareActuatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareSensor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareSensorItemProvider hardwareSensorItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareSensor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareSensorAdapter() {
		if (hardwareSensorItemProvider == null) {
			hardwareSensorItemProvider = new HardwareSensorItemProvider(this);
		}

		return hardwareSensorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwarePlatform} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwarePlatformItemProvider hardwarePlatformItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwarePlatform}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwarePlatformAdapter() {
		if (hardwarePlatformItemProvider == null) {
			hardwarePlatformItemProvider = new HardwarePlatformItemProvider(this);
		}

		return hardwarePlatformItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.EnvCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnvConditionItemProvider envConditionItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.EnvCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnvConditionAdapter() {
		if (envConditionItemProvider == null) {
			envConditionItemProvider = new EnvConditionItemProvider(this);
		}

		return envConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.FirmwareArchitecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FirmwareArchitectureItemProvider firmwareArchitectureItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.FirmwareArchitecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFirmwareArchitectureAdapter() {
		if (firmwareArchitectureItemProvider == null) {
			firmwareArchitectureItemProvider = new FirmwareArchitectureItemProvider(this);
		}

		return firmwareArchitectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareIpBlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareIpBlockItemProvider hardwareIpBlockItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareIpBlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareIpBlockAdapter() {
		if (hardwareIpBlockItemProvider == null) {
			hardwareIpBlockItemProvider = new HardwareIpBlockItemProvider(this);
		}

		return hardwareIpBlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwarePin} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwarePinItemProvider hardwarePinItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwarePin}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwarePinAdapter() {
		if (hardwarePinItemProvider == null) {
			hardwarePinItemProvider = new HardwarePinItemProvider(this);
		}

		return hardwarePinItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareWire} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareWireItemProvider hardwareWireItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareWire}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareWireAdapter() {
		if (hardwareWireItemProvider == null) {
			hardwareWireItemProvider = new HardwareWireItemProvider(this);
		}

		return hardwareWireItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareInterfaceItemProvider hardwareInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareInterfaceAdapter() {
		if (hardwareInterfaceItemProvider == null) {
			hardwareInterfaceItemProvider = new HardwareInterfaceItemProvider(this);
		}

		return hardwareInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.polarsys.time4sys.marte.hrm.HardwareInterfacePackage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HardwareInterfacePackageItemProvider hardwareInterfacePackageItemProvider;

	/**
	 * This creates an adapter for a {@link org.polarsys.time4sys.marte.hrm.HardwareInterfacePackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHardwareInterfacePackageAdapter() {
		if (hardwareInterfacePackageItemProvider == null) {
			hardwareInterfacePackageItemProvider = new HardwareInterfacePackageItemProvider(this);
		}

		return hardwareInterfacePackageItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (envConditionItemProvider != null) envConditionItemProvider.dispose();
		if (firmwareArchitectureItemProvider != null) firmwareArchitectureItemProvider.dispose();
		if (hardwareActuatorItemProvider != null) hardwareActuatorItemProvider.dispose();
		if (hardwareArbiterItemProvider != null) hardwareArbiterItemProvider.dispose();
		if (hardwareAsicItemProvider != null) hardwareAsicItemProvider.dispose();
		if (hardwareBranchPredictorItemProvider != null) hardwareBranchPredictorItemProvider.dispose();
		if (hardwareBridgeItemProvider != null) hardwareBridgeItemProvider.dispose();
		if (hardwareBusItemProvider != null) hardwareBusItemProvider.dispose();
		if (hardwareCacheItemProvider != null) hardwareCacheItemProvider.dispose();
		if (hardwareClockItemProvider != null) hardwareClockItemProvider.dispose();
		if (hardwareCommunicationResourceItemProvider != null) hardwareCommunicationResourceItemProvider.dispose();
		if (hardwareComputingResourceItemProvider != null) hardwareComputingResourceItemProvider.dispose();
		if (hardwareConnectorItemProvider != null) hardwareConnectorItemProvider.dispose();
		if (hardwareDeviceItemProvider != null) hardwareDeviceItemProvider.dispose();
		if (hardwareDmaItemProvider != null) hardwareDmaItemProvider.dispose();
		if (hardwareDriveItemProvider != null) hardwareDriveItemProvider.dispose();
		if (hardwareInterfaceItemProvider != null) hardwareInterfaceItemProvider.dispose();
		if (hardwareInterfacePackageItemProvider != null) hardwareInterfacePackageItemProvider.dispose();
		if (hardwareIoItemProvider != null) hardwareIoItemProvider.dispose();
		if (hardwareIpBlockItemProvider != null) hardwareIpBlockItemProvider.dispose();
		if (hardwareIsaItemProvider != null) hardwareIsaItemProvider.dispose();
		if (hardwareMediaItemProvider != null) hardwareMediaItemProvider.dispose();
		if (hardwareMemoryItemProvider != null) hardwareMemoryItemProvider.dispose();
		if (hardwareMmuItemProvider != null) hardwareMmuItemProvider.dispose();
		if (hardwarePinItemProvider != null) hardwarePinItemProvider.dispose();
		if (hardwarePlatformItemProvider != null) hardwarePlatformItemProvider.dispose();
		if (hardwarePldItemProvider != null) hardwarePldItemProvider.dispose();
		if (hardwarePortItemProvider != null) hardwarePortItemProvider.dispose();
		if (hardwareProcessorItemProvider != null) hardwareProcessorItemProvider.dispose();
		if (hardwareRamItemProvider != null) hardwareRamItemProvider.dispose();
		if (hardwareResourcePackageItemProvider != null) hardwareResourcePackageItemProvider.dispose();
		if (hardwareRomItemProvider != null) hardwareRomItemProvider.dispose();
		if (hardwareSensorItemProvider != null) hardwareSensorItemProvider.dispose();
		if (hardwareServiceItemProvider != null) hardwareServiceItemProvider.dispose();
		if (hardwareStorageManagerItemProvider != null) hardwareStorageManagerItemProvider.dispose();
		if (hardwareSupportItemProvider != null) hardwareSupportItemProvider.dispose();
		if (hardwareTimingResourceItemProvider != null) hardwareTimingResourceItemProvider.dispose();
		if (hardwareTimerItemProvider != null) hardwareTimerItemProvider.dispose();
		if (hardwareWatchdogItemProvider != null) hardwareWatchdogItemProvider.dispose();
		if (hardwareWireItemProvider != null) hardwareWireItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link GrmPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class GrmChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends GrmSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseResource(Resource object) {
				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createFirmwareArchitecture()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareDevice()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareIo()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareActuator()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareCommunicationResource()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareArbiter()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareComputingResource()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareAsic()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareBranchPredictor()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareMedia()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareBridge()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareBus()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareMemory()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareCache()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareTimingResource()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareClock()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareStorageManager()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareDma()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareDrive()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareIpBlock()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareIsa()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareMmu()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwarePlatform()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwarePld()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareProcessor()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareRam()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareRom()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareSensor()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareSupport()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareTimer()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_RESOURCE,
						 HrmFactory.eINSTANCE.createHardwareWatchdog()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_PORT,
						 HrmFactory.eINSTANCE.createHardwarePort()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__OWNED_CONNECTOR,
						 HrmFactory.eINSTANCE.createHardwareConnector()));

				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE__PSERVICES,
						 HrmFactory.eINSTANCE.createHardwareService()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseResourceInterface(ResourceInterface object) {
				newChildDescriptors.add
					(createChildParameter
						(GrmPackage.Literals.RESOURCE_INTERFACE__OWNED_SERVICE,
						 HrmFactory.eINSTANCE.createHardwareService()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return HrmEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class CoreElementsChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends org.polarsys.time4sys.marte.nfp.coreelements.util.CoreElementsSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object casePackage(org.polarsys.time4sys.marte.nfp.coreelements.Package object) {
				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createFirmwareArchitecture()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareDevice()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareIo()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareActuator()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareCommunicationResource()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareArbiter()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareComputingResource()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareAsic()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareBranchPredictor()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareMedia()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareBridge()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareBus()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareMemory()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareCache()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareTimingResource()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareClock()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareStorageManager()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareDma()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareDrive()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareInterface()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareInterfacePackage()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareIpBlock()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareIsa()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareMmu()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwarePlatform()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwarePld()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareProcessor()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareRam()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareResourcePackage()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareRom()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareSensor()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareSupport()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareTimer()));

				newChildDescriptors.add
					(createChildParameter
						(org.polarsys.time4sys.marte.nfp.coreelements.CoreElementsPackage.Literals.PACKAGE__OWNED_ELEMENT,
						 HrmFactory.eINSTANCE.createHardwareWatchdog()));

				return null;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return HrmEditPlugin.INSTANCE;
		}
	}

}
